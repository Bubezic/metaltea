import bridge from '@vkontakte/vk-bridge';

export const shareStatistics = async (stats, completedCourses, user) => {
  try {
    
    const message = `üéì –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—É—á–µ–Ω–∏—è –≤ "–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ —Ç—Ä–µ—Ç—å–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞":
    
üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: ${stats.completed}/${stats.total} –∫—É—Ä—Å–æ–≤ (${stats.completionPercentage}%)
‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: ${stats.completed} –∫—É—Ä—Å–æ–≤
üìö –í –ø—Ä–æ—Ü–µ—Å—Å–µ: ${stats.inProgress} –∫—É—Ä—Å–æ–≤

${completedCourses.length > 0 ? `üèÜ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã:\n${completedCourses.map(c => `‚Ä¢ ${c.title}`).join('\n')}` : 'üéØ –¢–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞—é –æ–±—É—á–µ–Ω–∏–µ!'}

–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è —Ç–æ–∂–µ! üéâ`;


    const friends = await bridge.send('VKWebAppGetFriends', {
      multi: false,
      count: 20,
      fields: 'first_name,last_name'
    });

    const result = await bridge.send('VKWebAppShowFriendsPicker', {
      multi: false,
      friends: friends.items.map(f => f.id)
    });

    if (result.result && result.users.length > 0) {
      await bridge.send('VKWebAppSendMessage', {
        peer_id: result.users[0].id,
        message: message
      });
      
      return { success: true, friend: result.users[0] };
    }
    
    return { success: false, error: '–î—Ä—É–≥ –Ω–µ –≤—ã–±—Ä–∞–Ω' };
  } catch (error) {
    console.error('Share error:', error);
    return { success: false, error: error.message };
  }
};